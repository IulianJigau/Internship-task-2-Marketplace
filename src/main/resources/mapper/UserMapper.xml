<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.test.junior.mapper.UserMapper">

    <select id="exists" parameterType="Long">
        SELECT EXISTS
                   (SELECT 1
                    FROM "user"
                    WHERE id = #{id});
    </select>

    <select id="existsEmail" parameterType="String">
        SELECT EXISTS
                   (SELECT 1
                    FROM "user"
                    WHERE email = LOWER(#{email}));
    </select>

    <select id="find" parameterType="Long" resultMap="userResultMapper">
        SELECT *
        FROM "user"
        WHERE id = #{id}
    </select>

    <select id="findByEmail" parameterType="String" resultMap="userResultMapper">
        SELECT *
        FROM "user"
        WHERE email = LOWER(#{email})
    </select>

    <select id="getPage" parameterType="map" resultMap="userResultMapper">
        SELECT *
        FROM "user"
        <if test="isDeleted != null">
            WHERE is_deleted = #{isDeleted}
        </if>
        ORDER BY id
            LIMIT #{size}
        OFFSET (#{page} - 1) * #{size}
    </select>

    <select id="getTotalEntries" parameterType="Boolean">
        SELECT COUNT(*)
        FROM "user"
        <if test="isDeleted != null">
            WHERE is_deleted = #{isDeleted}
        </if>
    </select>

    <select id="insert"
            parameterType="com.java.test.junior.model.user.UserDTO">
        INSERT INTO "user" (email, username, password)
        VALUES (LOWER(#{email}), #{username}, #{password})
        RETURNING id
    </select>

    <update id="update" parameterType="map">
        UPDATE "user"
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="delete" parameterType="Long">
        UPDATE "user"
        SET is_deleted = true
        WHERE id = #{id}
    </update>

    <delete id="clearDeleted">
        DELETE FROM "user"
        WHERE is_deleted = true
    </delete>

    <resultMap id="userResultMapper" type="com.java.test.junior.model.user.User">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

</mapper>
