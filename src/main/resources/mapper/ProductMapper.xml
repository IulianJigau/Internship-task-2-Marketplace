<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.test.junior.mapper.ProductMapper">

    <select id="exists" parameterType="Long">
        SELECT EXISTS
                   (SELECT 1
                    FROM product
                    WHERE id = #{id});
    </select>

    <select id="find" parameterType="Long" resultMap="productResultMapper">
        SELECT *
        FROM product
        WHERE id = #{id}
    </select>

    <select id="getPage" parameterType="map" resultMap="productResultMapper">
        SELECT *
        FROM product
        <where>
            <if test="isDeleted != null">
                AND is_deleted = #{isDeleted}
            </if>
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
        ORDER BY id
        LIMIT #{size}
        OFFSET #{size} * (#{page} - 1)
    </select>

    <select id="getTotalEntries" parameterType="map">
        SELECT COUNT(*)
        FROM product
        <where>
            <if test="isDeleted != null">
                AND is_deleted = #{isDeleted}
            </if>
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="insert"
            parameterType="com.java.test.junior.model.product.ProductDTO">
        INSERT INTO product (name, price, description, user_id)
        VALUES (#{product.name}, #{product.price}, #{product.description}, #{userId}) RETURNING id
    </select>

    <update id="update" parameterType="map">
        UPDATE product
        SET name        = #{product.name},
            price       = #{product.price},
            description = #{product.description}
        WHERE id = #{id}
    </update>

    <update id="delete" parameterType="Long">
        UPDATE product
        SET is_deleted = true
        WHERE id = #{id}
    </update>

    <delete id="clearDeleted">
        DELETE
        FROM product
        WHERE is_deleted = true
    </delete>

    <insert id="copyStaging" parameterType="Long">
        INSERT INTO product(name, price, description, user_id)
        SELECT name, price, description, #{userId}
        FROM staging_product;
        TRUNCATE TABLE staging_product;
    </insert>

    <select id="getProducts" parameterType="map" resultMap="productResultMapper">
        SELECT *
        FROM product
        <where>
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
        </where>
        ORDER BY
        <if test="userId != null">
            (user_id = #{userId}) DESC,
        </if>
        id
        LIMIT #{size}
        OFFSET #{offset}
    </select>

    <resultMap id="productResultMapper" type="com.java.test.junior.model.product.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="userId" column="user_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

</mapper>
