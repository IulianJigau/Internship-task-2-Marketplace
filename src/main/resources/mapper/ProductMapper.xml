<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.test.junior.mapper.ProductMapper">

    <select id="exists" parameterType="Long">
        SELECT EXISTS
                   (SELECT 1
                    FROM product
                    WHERE id = #{id});
    </select>

    <select id="find" parameterType="Long" resultMap="productResultMapper">
        SELECT *
        FROM product
        WHERE id = #{id}
    </select>

    <select id="getPage" parameterType="map" resultMap="productResultMapper">
        SELECT *
        FROM product
        <where>
            deleted = false
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
        </where>
        ORDER BY id
        LIMIT #{size}
        OFFSET #{size} * (#{page} - 1)
    </select>

    <select id="getPageByUserId" parameterType="map" resultMap="productResultMapper">
        SELECT *
        FROM product
        <where>
            deleted = false
            AND user_id = #{userId}
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
        </where>
        ORDER BY id
        LIMIT #{size}
        OFFSET #{size} * (#{page} - 1)
    </select>

    <select id="getDeletedPage" parameterType="map" resultMap="productResultMapper">
        SELECT *
        FROM product
        <where>
            deleted = true
            <if test="query != null and query != ''">
                AND fts_vector @@ plainto_tsquery('english', #{query})
            </if>
        </where>
        ORDER BY id
        LIMIT #{size}
        OFFSET #{size} * (#{page} - 1)
    </select>

    <insert id="insert"
            parameterType="com.java.test.junior.model.Product.ProductDTO"
            useGeneratedKeys="true"
            keyColumn="id">
        INSERT INTO product (name, price, description, user_id)
        VALUES (#{product.name}, #{product.price}, #{product.description}, #{userId})
    </insert>

    <update id="update" parameterType="map">
        UPDATE product
        SET name        = #{product.name},
            price       = #{product.price},
            description = #{product.description}
        WHERE id = #{id}
    </update>

    <update id="delete" parameterType="Long">
        UPDATE product
        SET deleted = true
        WHERE id = #{id}
    </update>

    <delete id="clearDeleted">
        DELETE FROM product
        WHERE deleted = true
    </delete>

    <resultMap id="productResultMapper" type="com.java.test.junior.model.Product.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="userId" column="user_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

</mapper>
